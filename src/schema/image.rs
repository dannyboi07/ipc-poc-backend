// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ImageResponse {
    #[prost(uint32, tag = "1")]
    pub request_id: u32,
    #[prost(enumeration = "ResponseCode", tag = "2")]
    pub response_code: i32,
    #[prost(enumeration = "ImageType", tag = "3")]
    pub image_type: i32,
    #[prost(bytes = "vec", tag = "4")]
    pub data: ::prost::alloc::vec::Vec<u8>,
    /// Flip flip = 1;
    /// Size thumb_size = 2;
    /// string path = 3;
    /// bool jpeg_sidecar = 4;
    /// bool force_libraw = 5;
    /// bool request_id = 6;
    #[prost(uint32, tag = "5")]
    pub content_length: u32,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ResponseCode {
    DefaultResponseCode = 0,
    Success = 1,
    NotFound = 2,
    Failed = 3,
}
impl ResponseCode {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DefaultResponseCode => "DefaultResponseCode",
            Self::Success => "Success",
            Self::NotFound => "NotFound",
            Self::Failed => "Failed",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DefaultResponseCode" => Some(Self::DefaultResponseCode),
            "Success" => Some(Self::Success),
            "NotFound" => Some(Self::NotFound),
            "Failed" => Some(Self::Failed),
            _ => None,
        }
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ImageType {
    DefaultImageType = 0,
    Jpeg = 1,
    Png = 2,
    Raw = 3,
}
impl ImageType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DefaultImageType => "DefaultImageType",
            Self::Jpeg => "Jpeg",
            Self::Png => "Png",
            Self::Raw => "Raw",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DefaultImageType" => Some(Self::DefaultImageType),
            "Jpeg" => Some(Self::Jpeg),
            "Png" => Some(Self::Png),
            "Raw" => Some(Self::Raw),
            _ => None,
        }
    }
}
